"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from .env file, if it exists
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Use environment variable or fallback to a default for development
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-8c9axthv+_$8$njrz^l-o7f+8a$gwdv8s$r95buif^tm7^-=sc')

# SECURITY WARNING: don't run with debug turned on in production!
# Set DEBUG to False in production environments
DEBUG = os.environ.get('DJANGO_DEBUG', 'False').lower() == 'true'

# In production, specify the allowed hosts
ALLOWED_HOSTS = os.environ.get('DJANGO_ALLOWED_HOSTS', 'yourdomain.com,www.yourdomain.com').split(',')

# For development, you can use:
# DEBUG = True
# ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'relationship_app',
    'accounts',
    'bookshelf',
]

# Specify the custom user model
AUTH_USER_MODEL = 'accounts.CustomUser'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_csp.middleware.CSPMiddleware',  # Add Content Security Policy middleware
    'accounts',
]

# Specify the custom user model
AUTH_USER_MODEL = 'bookshelf.CustomUser'

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (Uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Media files (User uploaded files)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = 'relationship_app:book_list'
LOGOUT_REDIRECT_URL = 'relationship_app:login'

# Security Settings
# HTTPS Configuration
# Redirect all HTTP requests to HTTPS
SECURE_SSL_REDIRECT = os.environ.get('DJANGO_SECURE_SSL_REDIRECT', 'True').lower() == 'true'

# Trust the X-Forwarded-Proto header from the proxy
# This is needed when Django is behind a proxy/load balancer that terminates SSL
# Only enable this in production when using a properly configured proxy
if os.environ.get('DJANGO_PROXY_SSL_HEADER', 'False').lower() == 'true':
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Enable browser XSS protection
SECURE_BROWSER_XSS_FILTER = True

# Prevent browsers from MIME-sniffing
SECURE_CONTENT_TYPE_NOSNIFF = True

# X-Frame-Options helps prevent clickjacking
# DENY: This page cannot be displayed in a frame
# SAMEORIGIN: This page can only be displayed in a frame on the same origin
X_FRAME_OPTIONS = 'DENY'

# Only use cookies over HTTPS
# Ensures that cookies are only sent over secure connections
SESSION_COOKIE_SECURE = os.environ.get('DJANGO_SESSION_COOKIE_SECURE', 'True').lower() == 'true'
CSRF_COOKIE_SECURE = os.environ.get('DJANGO_CSRF_COOKIE_SECURE', 'True').lower() == 'true'

# Set HttpOnly flag on cookies to prevent JavaScript access
# This helps protect against XSS attacks
SESSION_COOKIE_HTTPONLY = True
CSRF_COOKIE_HTTPONLY = True

# Set Secure Referrer Policy
SECURE_REFERRER_POLICY = 'same-origin'

# HTTP Strict Transport Security (HSTS) settings
# HSTS instructs browsers to only access the site via HTTPS
SECURE_HSTS_SECONDS = 31536000  # 1 year - browsers will remember HTTPS setting for this duration
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # Apply HSTS to all subdomains
SECURE_HSTS_PRELOAD = True  # Allow preloading in browser HSTS lists

# Content Security Policy settings
CSP_DEFAULT_SRC = ("'self'",)
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'", "https://cdn.jsdelivr.net",)
CSP_SCRIPT_SRC = ("'self'", "https://cdn.jsdelivr.net",)
CSP_IMG_SRC = ("'self'", "data:",)
CSP_FONT_SRC = ("'self'", "https://cdn.jsdelivr.net",)

# For development, you might want to comment out or modify some of these settings
# as they require HTTPS, which might not be set up in development environments.
# When deploying to production, ensure HTTPS is properly configured.
